local GGG = require "scripts.global"

local joystick_pressed = false
local joystick_offset = nil
local JOYSTICK_OFFSET_MAX_LENGTH = 200

local function reset_joystick(joy)
	joystick_pressed = false
	joystick_offset = vmath.vector3(0, 0, 0)
	gui.set_position(joy, joystick_offset)
end

local function handle_joystick_move(action, joy, container)
	local joy_pos = gui.get_position(container)
	joystick_offset = vmath.vector3(action.x, action.y, 0) - joy_pos
	local offset_length = vmath.length(joystick_offset)
	if offset_length > JOYSTICK_OFFSET_MAX_LENGTH then
		joystick_offset = joystick_offset / offset_length * JOYSTICK_OFFSET_MAX_LENGTH
	end
	gui.set_position(joy, joystick_offset)
	msg.post("/game#menu", "move", {offsetmod=joystick_offset/JOYSTICK_OFFSET_MAX_LENGTH})
end

function on_input(self, action_id, action)
	if GGG.current_screen ~= "#gameproxy" then return end
	if action_id == hash("touch") then
		local joy = gui.get_node("joystick")
		local container = gui.get_node("container")
		
		if action.pressed then
			if gui.pick_node(joy, action.x, action.y) then
				joystick_pressed = true
			end
		elseif action.released and joystick_pressed and joystick_offset then
			local joystick_offset_length = vmath.length_sqr(joystick_offset)
			if joystick_offset_length > 1 then
				msg.post("/game#menu", "release", {offsetmod=joystick_offset/JOYSTICK_OFFSET_MAX_LENGTH})
			end
			reset_joystick(joy)
		end

		if joystick_pressed then
			handle_joystick_move(action, joy, container)
		end
	end
end
